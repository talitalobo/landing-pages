producao_2011[1, 2]
producao_2011[1, 1]
for (i in length(producao_2011)) {
if (producao_2011[i, 1] == producao_2011_cul[i, 1])  {
producao_2011_cul[i, 10] <- producao_2011[i, 5]
}
}
View(producao_2011_cul)
save.image("~/git/algodoeiro/algodoeiro/src/R/US 9 - Relação entre algodao e culturas/workspace.RData")
hist(producao_2011_cul$area)
View(producao_2011_cul)
load("~/git/algodoeiro/algodoeiro/src/R/US 9 - Relação entre algodao e culturas/workspace.RData")
View(producao_2011_cul)
hist(producao_2011_cul$area)
hist(log(producao_2011_cul$area))
par(mfrow=c(1,2))
hist(producao_2011_cul$area)
hist(log(producao_2011_cul$area))
modelo <- lm(Algodao ~ area, data=producao_full[!is.na(Milho) ,])
producao_full <- producao_2011_cul
producao_full[is.na(producao_full)] <- 0
View(producao_full)
summary(modelo)
modelo <- lm(Algodao ~ area + Milho, data=producao_full[!is.na(Milho) ,])
summary(modelo)
attach(producao_full)
modelo <- lm(Algodao ~ area, data=producao_full[!is.na(Milho) ,])
summary(modelo)
modelo <- lm(Algodao ~ area + Milho, data=producao_full[!is.na(Milho) ,])
summary(modelo)
modelo <- lm(Algodao ~ area, data=producao_full[!is.na(Milho) & !is.na(Gergelim) ,])
summary(modelo)
modelo <- lm(Algodao ~ area + Milho + Gergelim, data=producao_full[!is.na(Milho) & !is.na(Gergelim) ,])
summary(modelo)
modelo <- lm(Algodao ~ area, data=producao_full[!is.na(Gergelim) ,])
summary(modelo)
modelo <- lm(Algodao ~ area + Gergelim, data=producao_full[!is.na(Gergelim) ,])
summary(modelo)
View(producao_full)
save.image("~/git/algodoeiro/algodoeiro/src/R/US 9 - Relação entre algodao e culturas/workspace.RData")
modelo2930 <- lm(agricultor_prod_comb$produtividade ~ agricultor_prod_comb$"0000000000001000" + agricultor_prod_comb$"0000101010100100")
load("~/git/algodoeiro/algodoeiro/src/R/US 9 - Combinação de Técnicas/work-11agosto.RData")
modelo2930 <- lm(agricultor_prod_comb$produtividade ~ agricultor_prod_comb$"0000000000001000" + agricultor_prod_comb$"0000101010100100")
summary(modelo2930)
modelo29 <- lm(agricultor_prod_comb$produtividade ~ agricultor_prod_comb$"0000101010100100")
summary(modelo29)
modelo30 <- lm(agricultor_prod_comb$produtividade ~ agricultor_prod_comb$"0000000000001000")
summary(modelo30)
# Seja C o grupo de técnicas, |C| < 20 & >= 10
modelo1020 <- lm(agricultor_prod_comb$produtividade ~ agricultor_prod_comb$"0000000100011000" + agricultor_prod_comb$"0000000100010000"
+ agricultor_prod_comb$"0000110010010110" + agricultor_prod_comb$"0010101010100100")
summary(modelo1020)
lm(agricultor_prod_comb$produtividade ~ agricultor_prod_comb$"0000000000001000" + agricultor_prod_comb$"0000101010100100").
lm(agricultor_prod_comb$produtividade ~ agricultor_prod_comb$"0000000000001000" + agricultor_prod_comb$"0000101010100100")
plot(lm(agricultor_prod_comb$produtividade ~ agricultor_prod_comb$"0000000000001000" + agricultor_prod_comb$"0000101010100100"))
plot(lm(agricultor_prod_comb$produtividade ~ agricultor_prod_comb$"0000101010100100"))
plot(lm(agricultor_prod_comb$produtividade ~ agricultor_prod_comb$"0000101010100100"))
modelo2930 <- lm(agricultor_prod_comb$produtividade ~ agricultor_prod_comb$"0000000000001000" + agricultor_prod_comb$"0000101010100100")
summary(modelo2930)
modelo29 <- lm(agricultor_prod_comb$produtividade ~ agricultor_prod_comb$"0000101010100100")
summary(modelo29)
modelo30 <- lm(agricultor_prod_comb$produtividade ~ agricultor_prod_comb$"0000000000001000")
summary(modelo30)
modelo1020 <- lm(agricultor_prod_comb$produtividade ~ agricultor_prod_comb$"0000000100011000" + agricultor_prod_comb$"0000000100010000"
+ agricultor_prod_comb$"0000110010010110" + agricultor_prod_comb$"0010101010100100")
summary(modelo1020)
View(combinacoes)
View(agricultor_prod_comb)
load("~/git/algodoeiro/algodoeiro/src/R/US 9 - Combinação de Técnicas/work-14agosto.RData")
View(agricultor_prod_comb)
modelo2930A <- lm(agricultor_prod_comb$produtividade ~
agricultor_prod_comb$area +
agricultor_prod_comb$"0000000000001000" +
agricultor_prod_comb$"0000101010100100")
summary(modelo2930A)
modeloA <- lm(agricultor_prod_comb$produtividade ~
agricultor_prod_comb$area)
summary(modeloA)
modeloA <- lm(agricultor_prod_comb$produtividade ~
agricultor_prod_comb$area)
summary(modeloA)
modelo1020A <- lm(agricultor_prod_comb$produtividade ~  agricultor_prod_comb$area +
agricultor_prod_comb$"0000000100011000" + agricultor_prod_comb$"0000000100010000"
+ agricultor_prod_comb$"0000110010010110" + agricultor_prod_comb$"0010101010100100")
summary(modelo1020A)
modelo1020 <- lm(agricultor_prod_comb$produtividade ~
agricultor_prod_comb$"0000000100010000" +
agricultor_prod_comb$"0010101010100100")
summary(modelo1020)
modelo1020 <- lm(agricultor_prod_comb$produtividade ~
agricultor_prod_comb$"0000000100010000" +
agricultor_prod_comb$"0010101010100100")
summary(modelo1020)
modelo1020 <- lm(agricultor_prod_comb$produtividade ~
agricultor_prod_comb$"0000000100011000" +
agricultor_prod_comb$"0000110010010110" +
agricultor_prod_comb$"0000000100010000" +
agricultor_prod_comb$"0010101010100100")
summary(modelo1020)
modelo1020 <- lm(agricultor_prod_comb$produtividade ~
agricultor_prod_comb$"0000000100010000" +
agricultor_prod_comb$"0010101010100100")
summary(modelo1020)
modelo1020 <- lm(agricultor_prod_comb$produtividade ~
agricultor_prod_comb$"0000000100011000" +
agricultor_prod_comb$"0000110010010110" )
summary(modelo1020)
modelo10202 <- lm(agricultor_prod_comb$produtividade ~
agricultor_prod_comb$"0000000100011000" +
agricultor_prod_comb$"0000110010010110" +
agricultor_prod_comb$"0000000000001000" +
agricultor_prod_comb$"0000101010100100")
summary(modelo10202)
modelo10202 <- lm(agricultor_prod_comb$produtividade ~
agricultor_prod_comb$"0000000100011000" +
agricultor_prod_comb$"0000110010010110" +
agricultor_prod_comb$"0000000000001000" +
agricultor_prod_comb$"0000101010100100")
summary(modelo10202)
modelo10201 <- lm(agricultor_prod_comb$produtividade ~
agricultor_prod_comb$"0000000100011000" +
agricultor_prod_comb$"0000110010010110" )
summary(modelo10201)
modelo10201 <- lm(agricultor_prod_comb$produtividade ~  agricultor_prod_comb$area +
agricultor_prod_comb$"0000000100011000" +
agricultor_prod_comb$"0000110010010110" )
summary(modelo10201)
modelo1020A <- lm(agricultor_prod_comb$produtividade ~ agricultor_prod_comb$area +
agricultor_prod_comb$"0000000100011000" +
agricultor_prod_comb$"0000110010010110" )
summary(modelo1020A)
modelo10201 <- lm(agricultor_prod_comb$produtividade ~
agricultor_prod_comb$"0000000100011000" +
agricultor_prod_comb$"0000110010010110" )
summary(modelo10201)
modelo1020A <- lm(agricultor_prod_comb$produtividade ~ agricultor_prod_comb$area +
agricultor_prod_comb$"0000000100011000" +
agricultor_prod_comb$"0000110010010110" )
summary(modelo1020A)
modelo2930A <- lm(agricultor_prod_comb$produtividade ~
agricultor_prod_comb$area +
agricultor_prod_comb$"0000000000001000" +
agricultor_prod_comb$"0000101010100100")
summary(modelo2930A)
modelo29 <- lm(agricultor_prod_comb$produtividade ~  agricultor_prod_comb$area +
agricultor_prod_comb$"0000101010100100")
summary(modelo29)
modelo29 <- lm(agricultor_prod_comb$produtividade ~ agricultor_prod_comb$"0000101010100100")
summary(modelo29)
modelo1020A <- lm(agricultor_prod_comb$produtividade ~ agricultor_prod_comb$area +
agricultor_prod_comb$"0000000100011000" +
agricultor_prod_comb$"0000110010010110" )
summary(modelo1020A)
modelo1020A <- lm(agricultor_prod_comb$produtividade ~
agricultor_prod_comb$"0000000100011000" +
agricultor_prod_comb$"0000110010010110" )
summary(modelo1020A)
modelo2930QG <- lm(agricultor_prod_comb$produtividade ~  agricultor_prod_comb$quantTecnicas
+ agricultor_prod_comb$"0000000000001000" + agricultor_prod_comb$"0000101010100100")
summary(modelo2930QG)
load("~/git/algodoeiro/algodoeiro/src/R/US 9 - Combinação de Técnicas/work-14agosto.RData")
modelo2930QG <- lm(agricultor_prod_comb$produtividade ~  agricultor_prod_comb$quantTecnicas
+ agricultor_prod_comb$"0000000000001000" + agricultor_prod_comb$"0000101010100100")
summary(modelo2930QG)
modeloQt <- lm(agricultor_prod_comb$produtividade ~  agricultor_prod_comb$quantTecnicas  )
summary(modeloQt)
modelo1020QG <- lm(agricultor_prod_comb$produtividade ~  agricultor_prod_comb$quantTecnicas   + agricultor_prod_comb$"0000000100011000" + agricultor_prod_comb$"0000000100010000"
+ agricultor_prod_comb$"0000110010010110" + agricultor_prod_comb$"0010101010100100")
summary(modelo1020QG)
modeloQG <- lm(agricultor_prod_comb$produtividade ~  agricultor_prod_comb$quantTecnicas   + agricultor_prod_comb$"0000000000001000" + agricultor_prod_comb$"0000101010100100" + agricultor_prod_comb$"0000000100011000" + agricultor_prod_comb$"0000000100010000"
+ agricultor_prod_comb$"0000110010010110" + agricultor_prod_comb$"0010101010100100")
summary(modeloQG)
load("~/git/algodoeiro/algodoeiro/src/R/US 9 - Combinação de Técnicas/work-14agosto.RData")
View(agricultor_prod_comb)
View(agricultor_producao_2011)
agricultor_ord <- agricultor_prod_comb[order(agricultor_prod_comb$produtividade),]
View(agricultor_ord)
nrow(agricultor_ord)
25/100
0.25*220
teste <- agricultor_ord[1:10,]
View(teste)
220-55
View(agricultor_ord)
rm(teste)
levels(agricultor_ord)
levels(agricultor_ord$area)
table(agricultor_ord$area)
220-55
25menos <- agricultor_ord[1:55,]
25mais  <- agricultor_ord[165:220,]
menos25 <- agricultor_ord[1:55,]
mais25  <- agricultor_ord[165:220,]
View(a)
mais25  <- agricultor_ord[166:220,]
View(mais25)
levels(agricultor_ord$area)
View(menos25)
ma25 <- lm(agricultor_ord$produtividade ~  agricultor_ord$area)
summary(ma25)
modelo1 <- lm(agricultor_ord$produtividade ~  agricultor_ord$area)
summary(modelo1)
View(mais25)
modelo2 <- lm(agricultor_ord$produtividade ~  agricultor_ord$quantTecnicas)
summary(modelo2)
modelo3 <- lm(agricultor_ord$produtividade ~  agricultor_ord$quantTecnicas + agricultor_ord$area)
summary(modelo3)
load("~/git/algodoeiro/algodoeiro/src/R/US 9 - Combinação de Técnicas/work-18agosto.RData")
View(menos25)
View(menos25)
View(mais25)
modelo1 <- lm(mais25$produtividade ~  mais25$area)
summary(modelo1)
modelo2 <- lm(mais25$produtividade ~  mais25$quantTecnicas)
summary(modelo2)
modelo3 <- lm(mais25$produtividade ~  mais25$quantTecnicas + mais25$area)
summary(modelo3)
modelo4 <- lm(menos25$produtividade ~  menos25$area)
summary(modelo4)
modelo5 <- lm(menos25$produtividade ~  menos25$quantTecnicas)
summary(modelo5)
plot(modelo4$residuals)
plot(modelo4$residuals, modelo4$fitted.values)
table(agricultor_prod_comb$area)
modelo6 <- lm(menos25$produtividade ~  menos25$quantTecnicas + menos25$area)
summary(modelo6)
# -- 25% menos
modelo4 <- lm(menos25$produtividade ~  menos25$area)
summary(modelo4)
modelo5 <- lm(menos25$produtividade ~  menos25$quantTecnicas)
summary(modelo5)
modelo6 <- lm(menos25$produtividade ~  menos25$quantTecnicas + menos25$area)
summary(modelo6)
plot(modelo6$residuals)
plot(modelo5$residuals)
plot(modelo4$residuals)
plot(modelo1$residuals)
plot(modelo3$residuals)
plot(modelo6$residuals)
plot(modelo5$residuals)
plot(modelo4$residuals)
par(mfrow=c(3,3))
par(mfrow=c(3,3))
plot(modelo4$residuals)
plot(modelo5$residuals)
plot(modelo6$residuals)
par(mfrow=c(1,3))
plot(modelo4$residuals)
plot(modelo5$residuals)
plot(modelo6$residuals)
par(mfrow=c(1,3))
plot(modelo4$residuals)
plot(modelo5$residuals)
plot(modelo6$residuals)
modelo1 <- lm(mais25$produtividade ~  mais25$area)
modelo2 <- lm(mais25$produtividade ~  mais25$quantTecnicas)
modelo3 <- lm(mais25$produtividade ~  mais25$quantTecnicas + mais25$area)
par(mfrow=c(1,3))
plot(modelo1$residuals)
plot(modelo2$residuals)
plot(modelo3$residuals)
modelo6 <- lm(menos25$produtividade ~  menos25$quantTecnicas + menos25$area)
summary(modelo6)
save.image("~/git/algodoeiro/algodoeiro/src/R/US 9 - Combinação de Técnicas/work-19agosto.RData")
modelo2930 <- lm(agricultor_prod_comb$produtividade ~
modelo2930 <- lm(agricultor_prod_comb$produtividade ~
agricultor_prod_comb$"0000000000001000" +
agricultor_prod_comb$"0000101010100100")
modelo29 <- lm(agricultor_prod_comb$produtividade ~  agricultor_prod_comb$area +
agricultor_prod_comb$"0000101010100100")
modelo30 <- lm(agricultor_prod_comb$produtividade ~  agricultor_prod_comb$area +
agricultor_prod_comb$"0000000000001000")
modelo2930A <- lm(agricultor_prod_comb$produtividade ~
agricultor_prod_comb$area +
agricultor_prod_comb$"0000000000001000" +
agricultor_prod_comb$"0000101010100100")
par(mfrow=c(1,4))
plot(modelo2930$residuals)
plot(modelo29$residuals)
plot(modelo30$residuals)
plot(modelo2930A$residuals)
plot(modelo2930$residuals, main="Modelo 2930")
par(mfrow=c(1,4))
plot(modelo2930$residuals, main="Modelo 2930")
plot(modelo29$residuals, main="Modelo 29")
plot(modelo30$residuals, main="Modelo 30")
plot(modelo2930A$residuals, main="Modelo 2930 + Area")
par(mfrow=c(1,3))
plot(modelo2930$residuals, main="Modelo 2930")
plot(modelo29$residuals, main="Modelo 29")
plot(modelo30$residuals, main="Modelo 30")
modelo1020.1 <- lm(agricultor_prod_comb$produtividade ~
agricultor_prod_comb$"0000000100011000" +
agricultor_prod_comb$"0000110010010110" )
summary(modelo1020.1)
modelo1020.2 <- lm(agricultor_prod_comb$produtividade ~
agricultor_prod_comb$"0000000100011000" +
agricultor_prod_comb$"0000110010010110" +
agricultor_prod_comb$"0000000000001000" +
agricultor_prod_comb$"0000101010100100")
summary(modelo1020.2)
par(mfrow=c(1,2))
plot(modelo1020.1$residuals, main="Modelo 1020.1")
plot(modelo1020.2$residuals, main="Modelo 1020.2")
modeloA <- lm(agricultor_prod_comb$produtividade ~
agricultor_prod_comb$area)
summary(modeloA)
modelo2930A <- lm(agricultor_prod_comb$produtividade ~
agricultor_prod_comb$area +
agricultor_prod_comb$"0000000000001000" +
agricultor_prod_comb$"0000101010100100")
summary(modelo2930A)
modelo1020A <- lm(agricultor_prod_comb$produtividade ~ agricultor_prod_comb$area +
agricultor_prod_comb$"0000000100011000" +
agricultor_prod_comb$"0000110010010110" )
summary(modelo1020A)
par(mfrow=c(1,3))
plot(modeloA$residuals, main="Modelo A")
plot(modelo2930A$residuals, main="Modelo 2930 + Area")
plot(modelo1020A$residuals, main="Modelo 1020 + Area")
modelo29QG <- lm(agricultor_prod_comb$produtividade ~  agricultor_prod_comb$quantTecnicas  + agricultor_prod_comb$"0000101010100100")
summary(modelo29QG)
modelo30QG <- lm(agricultor_prod_comb$produtividade ~  agricultor_prod_comb$quantTecnicas  +agricultor_prod_comb$"0000000000001000")
summary(modelo30QG)
modelo2930QG <- lm(agricultor_prod_comb$produtividade ~  agricultor_prod_comb$quantTecnicas
+ agricultor_prod_comb$"0000000000001000" + agricultor_prod_comb$"0000101010100100")
summary(modelo2930QG)
par(mfrow=c(1,2))
plot(modelo2930QG$residuals, main="Modelo 2930 + Qnt. Tec")
plot(modelo1020QG$residuals, main="Modelo 1020 + Qnt. Tec")
modeloAQ <- lm(agricultor_prod_comb$produtividade ~  agricultor_prod_comb$area   + agricultor_prod_comb$quantTecnicas)
summary(modeloAQ)
par(mfrow=c(1,3))
plot(modelo2930AQG$residuals, main="Modelo 2930 + Qnt. Tec + Area")
plot(modelo1020AQG$residuals, main="Modelo 1020 + Qnt. Tec + Area")
plot(modeloAQ$residuals, main="Modelo Qnt. Tec + Area")
save.image("~/git/algodoeiro/algodoeiro/src/R/US 9 - Combinação de Técnicas/work-19agosto.RData")
View(producao_tecnicas)
library(RODBC)
library(ggplot2)
library(reshape)
library(car)
library(GGally)
channel <- odbcConnect("AlgodoeiroDSN")
renta_tecnicas = sqlQuery(channel, "SELECT distinct a.nome_agricultor, r.nome_regiao, ba.receita_total, p.quantidade_produzida,
p.area_plantada, t.nome_tecnica, year(p.data_plantio)
from agricultor a, Regiao r, Balanco ba, Cultura c, producao p, Tecnica_Adotada ta, Tecnica t, Comunidade co
where p.id_agricultor = a.id and p.id_cultura = c.id and ta.id_agricultor = a.id and
and ba.id_agricultor = a.id and co.id = a.id_comunidade and r.id = co.id_regiao
and c.id=1 and t.id = ta.id_tecnica  order by a.nome_agricultor", stringsAsFactor = FALSE)
close(channel)
fix(renta_tecnicas)
channel <- odbcConnect("AlgodoeiroDSN")
renta_tecnicas = sqlQuery(channel, "SELECT distinct a.nome_agricultor, r.nome_regiao, ba.receita_total, p.quantidade_produzida,
p.area_plantada, t.nome_tecnica, year(p.data_plantio)
from
agricultor a, Regiao r, Balanco ba, Cultura c, producao p, Tecnica_Adotada ta, Tecnica t, Comunidade co
where p.id_agricultor = a.id and p.id_cultura = c.id and ta.id_agricultor = a.id and
and co.id = a.id_comunidade and r.id = co.id_regiao
and c.id=1 and t.id = ta.id_tecnica
and ba.id_agricultor = a.id
order by a.nome_agricultor", stringsAsFactor = FALSE)
fix(renta_tecnicas)
require(gridExtra)
install.packages("gridExtra")
require(gridExtra)
library(RODBC)
library(reshape)
library(data.table)
library(GGally)
#Conexão do Banco de Dados. AlgodoeiroDSN é o Data Source Name com as configurações do BD.
channel <- odbcConnect("AlgodoeiroDSN")
# Foi deixado de fora  Fava(id=4) e Guandu (id=7)
agricultor_producao = sqlQuery(channel,"SELECT a.id, a.nome_agricultor, r.nome_regiao, p.id_cultura, c.nome_cultura
from agricultor a, Cultura c, producao p,  Comunidade co, Regiao r
where p.id_agricultor=a.id and p.id_cultura=c.id and co.id = a.id_comunidade and r.id = co.id_regiao
and year(p.data_plantio)=2011 and p.id_cultura !=4 and p.id_cultura !=7 order by a.nome_agricultor",
stringsAsFactor = FALSE)
rm(agricultor_producao)
agricultor_producao = sqlQuery(channel,"SELECT a.id, a.nome_agricultor, r.nome_regiao, p.id_cultura, c.nome_cultura
from agricultor a, Cultura c, producao p,  Comunidade co, Regiao r
where p.id_agricultor=a.id and p.id_cultura=c.id and co.id = a.id_comunidade and r.id = co.id_regiao
and year(p.data_plantio)=2011 and p.id_cultura !=4 and p.id_cultura !=7 order by a.nome_agricultor",
stringsAsFactor = FALSE)
agricultor_receita = sqlQuery(channel, "SELECT a.id, a.nome_agricultor, r.nome_regiao,
ROUND(SUM(p.quantidade_produzida*v.valor)/ p.area_plantada,2) as receita, p.area_plantada
FROM Regiao r, Producao p, Venda v, Agricultor a, Comunidade c
where r.id=v.id_regiao and p.id_cultura=v.id_cultura and year(p.data_plantio)=2011 and
a.id_comunidade=c.id and p.id_agricultor=a.id and c.id_regiao=r.id
group by a.id, r.nome_regiao, a.nome_agricultor, p.area_plantada order by a.nome_agricultor")
close(channel)
agricultor_producao_aux <- agricultor_producao
agricultor_producao_aux$produziu <- 1
agricultor_producao_aux[agricultor_producao_aux$nome_cultura=="Sorgo Forragem",]$nome_cultura <- "SorgoForragem"
agricultor_producao_aux[agricultor_producao_aux$nome_cultura=="Algodão Aroeira",]$nome_cultura <- "Algodao"
# Deixa as culturas do df na horizontal com valores de produziu que no caso esta 1
agricultor_producao_aux <- cast(agricultor_producao_aux, id +nome_agricultor + nome_regiao ~ nome_cultura)
# Coloca 0 onde tem NA
agricultor_producao_aux[is.na(agricultor_producao_aux)] <- 0
#Verifica a frequência de cada cultura
apply(X=agricultor_producao_aux[4:14],2,FUN=function(x) length(which(x==1)))
# Retirando pluma e caroço
agricultor_producao_aux$Pluma <- NULL
agricultor_producao_aux$Caroço <- NULL
# Selecionando as possiveis combinacoes de culturas
combinacoes <- unique(agricultor_producao_aux[4:12])
View(agricultor_producao)
View(agricultor_producao)
View(agricultor_producao_aux)
plot(agricultor_prod_rec$"111101100", agricultor_prod_rec$receita, xlab="Algodão, Amendoim, Feijão, Gergilim, Melancia e Milho", ylab="Rentabilidade (receita / ha)")
# Conta a quantidade de vezes que cada combinação aparece
library(plyr)
combinacoes <- ddply(agricultor_producao_aux,colnames(combinacoes),nrow)
setnames(combinacoes, "V1", "Repeticoes")
#Concatena as combinacoes
combinacoesJuntas <- do.call(paste, c(as.list(agricultor_producao_aux[4:12]), sep=""))
quantCulturasProd <- rowSums(agricultor_producao_aux[4:12])
#Cria um data frame com as receitas e as combinacoes
agricultor_prod_receita <- data.frame("nome_agricultor"=agricultor_producao_aux$nome_agricultor, "regiao"= agricultor_receita$nome_regiao,
"receita"= agricultor_receita$receita, "area_plantada"=agricultor_receita$area_plantada,
"combinacoes"=combinacoesJuntas, "quantCulturas"=quantCulturasProd)
agricultor_prod_receita$produziu <- 1
#Cria um novo data frame com as colunas de combinações
agricultor_prod_rec<-cast(agricultor_prod_receita, nome_agricultor+ regiao + receita + area_plantada + quantCulturas~ combinacoes)
# Coloca 0 onde estava NA
agricultor_prod_rec[is.na(agricultor_prod_rec)] <- 0
# Calcula a occorencia das combinações
apply(X=agricultor_prod_rec[6:43],2,FUN=function(x) length(which(x==1)))
library(ggplot2)
plot(agricultor_prod_rec$"111101100", agricultor_prod_rec$receita, xlab="Algodão, Amendoim, Feijão, Gergilim, Melancia e Milho", ylab="Rentabilidade (receita / ha)")
abline(lm(agricultor_prod_rec$receita~ agricultor_prod_rec$"111101100"))
par(mfrow=c(1,3))
plot(agricultor_prod_rec$"101000100", agricultor_prod_rec$receita, xlab="Algodão, Feijão e Milho", ylab="Rentabilidade (receita / ha)")
abline(lm(agricultor_prod_rec$receita~ agricultor_prod_rec$"101000100"))
plot(agricultor_prod_rec$"101001100", agricultor_prod_rec$receita, xlab="Algodão, Feijão, Melancia e Milho", ylab="Rentabilidade (receita / ha)")
abline(lm(agricultor_prod_rec$receita~ agricultor_prod_rec$"101001100"))
plot(agricultor_prod_rec$"111101100", agricultor_prod_rec$receita, xlab="Algodão, Amendoim, Feijão, Gergilim, Melancia e Milho", ylab="Rentabilidade (receita / ha)")
abline(lm(agricultor_prod_rec$receita~ agricultor_prod_rec$"111101100"))
dev.off()
plot(agricultor_prod_rec$area_plantada, agricultor_prod_rec$receita, xlab="Área", ylab="Rentabilidade (receita / ha)")
abline(lm(agricultor_prod_rec$receita~ agricultor_prod_rec$area_plantada))
plot(agricultor_prod_rec$quantCulturas, agricultor_prod_rec$receita, xlab="Quantidade de culturas", ylab="Rentabilidade (receita / ha)")
abline(lm(agricultor_prod_rec$receita~ agricultor_prod_rec$quantCulturas))
png("combinações culturas x rentabilidade.png",width=1000, height = 400)
par(mfrow=c(1,3))
plot(agricultor_prod_rec$"101000100", agricultor_prod_rec$receita, xlab="Algodão, Feijão e Milho", ylab="Rentabilidade (receita / ha)")
abline(lm(agricultor_prod_rec$receita~ agricultor_prod_rec$"101000100"))
plot(agricultor_prod_rec$"101001100", agricultor_prod_rec$receita, xlab="Algodão, Feijão, Melancia e Milho", ylab="Rentabilidade (receita / ha)")
abline(lm(agricultor_prod_rec$receita~ agricultor_prod_rec$"101001100"))
plot(agricultor_prod_rec$"111101100", agricultor_prod_rec$receita, xlab="Algodão, Amendoim, Feijão, Gergilim, Melancia e Milho", ylab="Rentabilidade (receita / ha)")
abline(lm(agricultor_prod_rec$receita~ agricultor_prod_rec$"111101100"))
dev.off()
#Gráfico Receitas
ggplot(agricultor_prod_receita, aes(x=produziu, y = receita, colour=combinacoes)) +
geom_point(alpha = 0.3, position = position_jitter(width = .2))+
facet_grid(combinacoes ~. ) + geom_boxplot(alpha = 0.7, outlier.colour = agricultor_prod_receita$receita) +
coord_flip()
area = ggplot(agricultor_prod_rec, aes(x=agricultor_prod_rec$area_plantada, y=agricultor_prod_rec$receita)) +
geom_point(shape=1) +
geom_smooth(method=lm,
se=FALSE) +  xlab("Área (ha)") +  ylab("Rentabilidade (receita / ha)") + tema
plot(agricultor_prod_rec$area_plantada, agricultor_prod_rec$receita, xlab="Área", ylab="Rentabilidade (receita / ha)")
abline(lm(agricultor_prod_rec$receita~ agricultor_prod_rec$area_plantada))
plot(agricultor_prod_rec$quantCulturas, agricultor_prod_rec$receita, xlab="Quantidade de culturas", ylab="Rentabilidade (receita / ha)")
abline(lm(agricultor_prod_rec$receita~ agricultor_prod_rec$quantCulturas))
par(mfrow=c(1,2))
plot(agricultor_prod_rec$area_plantada, agricultor_prod_rec$receita, xlab="Área", ylab="Rentabilidade (receita / ha)")
abline(lm(agricultor_prod_rec$receita~ agricultor_prod_rec$area_plantada))
plot(agricultor_prod_rec$quantCulturas, agricultor_prod_rec$receita, xlab="Quantidade de culturas", ylab="Rentabilidade (receita / ha)")
abline(lm(agricultor_prod_rec$receita~ agricultor_prod_rec$quantCulturas))
getwd()
install.packages("rmarkdown")
summary(cars)
getwd()
setwd("git/tpanalytics/tpanalytics/")
library("ggplot2")
library("knitr")
library("Hmisc")
library("reshape2")
library("nortest")
library("scales")
library("ggthemes")
install.packages("ggthemes")
library("ggthemes")
library(DBI)
library(RMySQL)
db.driver <- dbDriver("MySQL")
con <- dbConnect(db.driver, group = "tpanalytics")
dbSendQuery(con, "SET NAMES utf8")
data.bilhetagem<-dbSendQuery(con, "select * from tb_bilhetagem")
data.bilhetagem<- fetch(data.bilhetagem, n = -1)
data.empresas<-dbSendQuery(con, "select * from tb_empresa")
data.empresas<- fetch(data.empresas, n = -1)
data.onibus<-dbSendQuery(con, "select * from tb_onibus")
data.onibus<- fetch(data.onibus, n = -1)
data.tipo_dia<-dbSendQuery(con, "select * from tb_tipo_dia")
data.tipo_dia<- fetch(data.tipo_dia, n = -1)
dbDisconnect(con)
library(devtools)
install.packages("opencpu")
library(opencpu)
library(opencpu)
getwd()
setwd("git/talitalobo.github.io/ad20151/r4/")
data <- read.csv("evals.csv")
View(data)
table(data$ethnicity)
table(data$cls_perc_eval)
head(data)
hist(score)
hist(data$score)
getwd()
